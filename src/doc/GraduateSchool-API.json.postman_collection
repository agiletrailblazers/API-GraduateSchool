{
	"id": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
	"name": "GraduateSchool-API",
	"description": "",
	"order": [
		"29234a3b-12ab-dbe6-65f6-503383f75432",
		"ee3d4402-0667-fcf8-8452-8cd49f7f6950",
		"3e749c53-eed8-dbd1-db83-60c3222e5e63",
		"c2486fa5-4c59-42f5-d847-6aedfb56a05e",
		"9c6bb337-36aa-2a5a-ddb6-13da60ab50f0",
		"0df1f380-a4d5-5483-4fa3-e14a1fb41553",
		"e1898afc-de54-a654-ad42-ac1e588e105e",
		"fc563678-7cfc-ab44-519a-5b4a8c3f962f",
		"bf45328a-a7eb-76e1-c8e0-b0f4f81b2e48",
		"26a608ca-0d6e-dbaf-42e3-0bfa93d339f5",
		"d29c45ec-cd59-a57a-aeea-52125fdb28ae",
		"b6ff5cdf-142a-3f99-2f4a-9f4b013c1b9b",
		"77b8e922-998b-3bdd-5134-2cd037b706f6",
		"55a0c57d-2144-198d-91bd-543d084efcb1",
		"d7323037-fcd6-3537-2d31-dfb2d6ea9216",
		"5108035a-22f7-910e-31a2-c784e05f99b5",
		"f79f097d-85d6-0890-32b2-76d7e854ecc9",
		"a9f10585-ebe7-88c6-29fa-8b0d5922bedd",
		"c780e349-d640-ce07-abf3-8d185f9e70b5",
		"e4633a67-8117-d1f3-cbed-a798cb6a91a7",
		"d4c1356e-43cc-f85b-abc0-90d31bea2264",
		"b868c579-22b9-b7d2-71c9-0cf04e6ecad3",
		"6c7b609e-d5bc-595c-c855-6b1b9eb75a19",
		"ce63e057-6829-3556-8b9c-b3b495c009f0"
	],
	"folders": [
		{
			"id": "97bcc234-d416-5ae1-cd07-1c02cd44d2ec",
			"name": "Authentication",
			"description": "",
			"order": [
				"4c41a6e7-f63c-63b2-c63a-24592ac7d582",
				"88c758d3-024b-96aa-39ad-3fc96e3cd754",
				"897be95c-935a-2cdf-6a5c-e7e0ff8295a6",
				"fdca5ff5-7f18-46b6-492b-45ee346534a3",
				"a1dba4e5-a4ed-d933-7349-bb1f01091b59",
				"0e53dc66-9bc4-c2da-8086-132f3b8e704b",
				"81b82354-49c8-6da8-227c-d7730ee6861a",
				"0614339a-49d8-d902-df2c-289b1200c72c",
				"049497c9-2fa0-6082-10f6-a8411698739a",
				"5c593e88-27d8-4004-a4ae-6860468e41bb",
				"f448e814-73cc-c981-fb49-26cdff3804bc",
				"16879f88-c2a2-197f-e41e-3fe7de048f4c",
				"3ef1f926-83a4-ad03-4d81-c307cc54f9bf"
			],
			"owner": "329957",
			"collectionId": "10b1d29e-b87b-20cb-cbfb-50dff1f0ab5f"
		}
	],
	"timestamp": 1436731751085,
	"owner": "329957",
	"remoteLink": "",
	"public": false,
	"requests": [
		{
			"id": "049497c9-2fa0-6082-10f6-a8411698739a",
			"headers": "Authorization: {{authentication.authenticated_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/registration/user/{{authentication.user_id}}/session/555555",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457553875001,
			"name": "Get Registrations for User by Session",
			"description": "Verify that no registrations for the user",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": [],
			"folder": "97bcc234-d416-5ae1-cd07-1c02cd44d2ec"
		},
		{
			"id": "0614339a-49d8-d902-df2c-289b1200c72c",
			"headers": "Authorization: {{authentication.authenticated_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/user/{{authentication.user_id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Verify successful authentication\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\n\ntests[\"Verify correct user\"] = data.id === postman.getGlobalVariable(\"authentication.user_id\");\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1456590490031,
			"name": "Get Postman User by ID",
			"description": "Get the postman user by the user id",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": [],
			"folder": "97bcc234-d416-5ae1-cd07-1c02cd44d2ec"
		},
		{
			"id": "0df1f380-a4d5-5483-4fa3-e14a1fb41553",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses?search=government&page=2&numRequested=10",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\ntests[\"Current page is 2\"] = data.currentPage === 2;\ntests[\"Num requested is 10\"] = data.numRequested === 10;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831595202,
			"name": "Courses - Search - Pagination",
			"description": "Search for a course by a description or course code with page and nuumber requested specified",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": []
		},
		{
			"id": "0e53dc66-9bc4-c2da-8086-132f3b8e704b",
			"headers": "Authorization: {{authentication.guest_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/user",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar data = JSON.parse(responseBody);\npostman.setGlobalVariable(\"authentication.user_id\", data.id);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458752592977,
			"name": "Create Postman User",
			"description": "Create the postman user for the authentication tests",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": [],
			"rawModeData": "{\n    \"username\" : \"postman@atb.com\",\n    \"password\" : \"test1234\",\n    \"lastFourSSN\" : \"4444\",\n    \"timezoneId\" : \"tzone000000000000012\",\n    \"person\" : {\n        \"firstName\" : \"Postman\",\n        \"lastName\" : \"Postman\",\n        \"emailAddress\" : \"postman@atb.com\",\n        \"primaryPhone\" : \"5555555555\",\n        \"dateOfBirth\" : \"19500404\",\n        \"primaryAddress\" : {\n            \"address1\" : \"42 Woodland Drive\",\n            \"city\" : \"East Windsor\",\n            \"state\" : \"NJ\",\n            \"postalCode\" : \"08520\"\n        }\n    }\n}",
			"folder": "97bcc234-d416-5ae1-cd07-1c02cd44d2ec"
		},
		{
			"id": "16879f88-c2a2-197f-e41e-3fe7de048f4c",
			"headers": "Authorization: {{authentication.authenticated_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/user/{{authentication.user_id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Verify user not found\"] = responseCode.code === 404;\n\nvar data = JSON.parse(responseBody);\n\ntests[\"Verify correct message\"] = data.message === (\"User not found by id \" + postman.getGlobalVariable(\"authentication.user_id\"));\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1456591992212,
			"name": "Get Postman User by ID Should Not Be Found",
			"description": "Verify that the postman user has been deleted",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": [],
			"folder": "97bcc234-d416-5ae1-cd07-1c02cd44d2ec"
		},
		{
			"id": "26a608ca-0d6e-dbaf-42e3-0bfa93d339f5",
			"headers": "Authorization: {{auth_token}}\n",
			"url": " http://{{url}}:{{port}}/api/courses?search=government&filter={facet-countall}category_subject:Accounting~Accounting",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Body matches string\"] = responseBody.has(\"courses\");\nvar data = JSON.parse(responseBody);\ntests[\"Results Found\"] = data.numFound != 0;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831767286,
			"name": "Courses- Search -Filter by Category Subject",
			"description": "A Course Search by Category Subject",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": []
		},
		{
			"folder": null,
			"id": "29234a3b-12ab-dbe6-65f6-503383f75432",
			"name": "Ping",
			"dataMode": "params",
			"data": [],
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "A ping test API",
			"headers": "",
			"method": "GET",
			"pathVariables": {},
			"url": "http://{{url}}:{{port}}/api/ping",
			"preRequestScript": "",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd"
		},
		{
			"id": "3e749c53-eed8-dbd1-db83-60c3222e5e63",
			"headers": "",
			"url": "http://{{url}}:{{port}}/api/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\npostman.setGlobalVariable(\"auth_token\", data.token);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831007307,
			"name": "Get Token",
			"description": "Get auth token",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": []
		},
		{
			"id": "3ef1f926-83a4-ad03-4d81-c307cc54f9bf",
			"headers": "Authorization: {{authentication.guest_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/authentication",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Verify unauthorized\"] = responseCode.code === 401;\n\npostman.clearGlobalVariable(\"authentication.user_id\");\npostman.clearGlobalVariable(\"authentication.guest_token\");\npostman.clearGlobalVariable(\"authentication.authenticated_token\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1456591230081,
			"name": "Postman User Authentication Should Fail Again",
			"description": "Verify that the postman user can no longer login",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": [],
			"rawModeData": "{\n\"username\" : \"postman@atb.com\",\n\"password\" : \"test1234\"\n}",
			"folder": "97bcc234-d416-5ae1-cd07-1c02cd44d2ec"
		},
		{
			"id": "4c41a6e7-f63c-63b2-c63a-24592ac7d582",
			"headers": "",
			"url": "http://{{url}}:{{port}}/api/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\npostman.setGlobalVariable(\"authentication.guest_token\", data.token);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1456589784416,
			"name": "Get Guest Token",
			"description": "Get a guest token to be used for the authentication test collection",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": [],
			"folder": "97bcc234-d416-5ae1-cd07-1c02cd44d2ec"
		},
		{
			"id": "5108035a-22f7-910e-31a2-c784e05f99b5",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses/BAD12345/sessions",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\nvar data = JSON.parse(responseBody);\ntests[\"Check for valid error message\"] = data.message === \"No sessions found for course courseId BAD12345\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831846943,
			"name": "Course Sessions Error",
			"description": "See what a course session error looks like",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": []
		},
		{
			"id": "55a0c57d-2144-198d-91bd-543d084efcb1",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses/BAD1234",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\nvar data = JSON.parse(responseBody);\ntests[\"Check for valid error message\"] = data.message === \"No course found for course courseId BAD1234\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831824857,
			"name": "Course Detail Error",
			"description": "No course found for Course Code",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": []
		},
		{
			"id": "5c593e88-27d8-4004-a4ae-6860468e41bb",
			"headers": "Authorization: {{authentication.authenticated_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/reauthentication",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Verify successful reAuthentication\"] = responseCode.code === 200;\n\ntests[\"Verify body is empty\"] = responseBody === \"\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461243626817,
			"name": "Postman User ReAuthorize Token AuthToken Still Valid",
			"description": "",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": [],
			"rawModeData": "{\n    \"authToken\" : {\n        \"token\" : \"{{authentication.authenticated_token}}\"\n    },\n    \"renewalToken\" : {\n        \"token\" : \"{{authentication.renewal_token}}\"\n    }\n}"
		},
		{
			"id": "6c7b609e-d5bc-595c-c855-6b1b9eb75a19",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses/sessions",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"data": null,
			"dataMode": "params",
			"name": "Sessions - All",
			"description": "",
			"descriptionFormat": "html",
			"time": 1458852618739,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n\ntests[\"Body matches string\"] = responseBody.has(\"classNumber\");",
			"currentHelper": "normal",
			"helperAttributes": {}
		},
		{
			"id": "77b8e922-998b-3bdd-5134-2cd037b706f6",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses/ADMB7006D001",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\ntests[\"Check id\"] = data.id === \"ADMB7006D001\";\ntests[\"Check code\"] = data.code === \"ADMB7006D\";\ntests[\"Objective exists\"] = data.objective.length > 0;\ntests[\"Outcomes exists\"] = data.outcomes.length > 0;\ntests[\"Description exists\"] = data.description.formatted.length > 0;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831808191,
			"name": "Course Detail",
			"description": "Get course detail",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": []
		},
		{
			"id": "81b82354-49c8-6da8-227c-d7730ee6861a",
			"headers": "Authorization: {{authentication.guest_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/authentication",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Verify successful authentication\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\n\ntests[\"Verify correct user\"] = data.user.id === postman.getGlobalVariable(\"authentication.user_id\");\ntests[\"Verify renewal token created\"] = data.renewalToken.token;\n\npostman.setGlobalVariable(\"authentication.authenticated_token\", data.authToken.token);\npostman.setGlobalVariable(\"authentication.renewal_token\", data.renewalToken.token);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461181834225,
			"name": "Postman User Authentication Should Succeed",
			"description": "Verify that the postman user can login",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": [],
			"rawModeData": "{\n\"username\" : \"postman@atb.com\",\n\"password\" : \"test1234\"\n}"
		},
		{
			"id": "88c758d3-024b-96aa-39ad-3fc96e3cd754",
			"headers": "Authorization: {{authentication.guest_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/authentication",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 401\"] = responseCode.code === 401;\n\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Invalid user message\"] = jsonData.message === \"Invalid user\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1456589788349,
			"name": "Postman User Authentication Should Fail",
			"description": "Verify that the postman user cannot login since the user does not exist at this point.",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": [],
			"folder": "97bcc234-d416-5ae1-cd07-1c02cd44d2ec",
			"rawModeData": "{\n\"username\" : \"postman@atb.com\",\n\"password\" : \"test1234\"\n}"
		},
		{
			"id": "897be95c-935a-2cdf-6a5c-e7e0ff8295a6",
			"headers": "Authorization: {{authentication.guest_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/user",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\ntests[\"Should have exactly 4 validation errors\"] = data.validationErrors.length == 4;\nvar validationErrorsMap = new Map();\nfor (i=0; i<data.validationErrors.length; i++){\n    validationErrorsMap.set(data.validationErrors[i].fieldName, data.validationErrors[i].errorMessage);\n}\n\ntests[\"Address1 is a required field\"] = validationErrorsMap.get(\"person.primaryAddress.address1\") === \"Required field\";\ntests[\"City is a required field\"] = validationErrorsMap.get(\"person.primaryAddress.city\") === \"Required field\";\ntests[\"State is a required field\"] = validationErrorsMap.get(\"person.primaryAddress.state\") === \"Required field\";\ntests[\"Postal Code is a required field\"] = validationErrorsMap.get(\"person.primaryAddress.postalCode\") === \"Required field\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458759819772,
			"name": "Create Postman User for Input Validation of Address",
			"description": "Create the postman user with invalid user information in Address Object for validation testing",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": [],
			"rawModeData": "{\n    \"username\" : \"postman@atb.com\",\n    \"password\" : \"test1234\",\n    \"lastFourSSN\" : \"4444\",\n    \"timezoneId\" : \"tzone000000000000012\",\n    \"person\" : {\n        \"firstName\" : \"Postman\",\n        \"lastName\" : \"Postman\",\n        \"emailAddress\" : \"postman@atb.com\",\n        \"primaryPhone\" : \"5555555555\",\n        \"dateOfBirth\" : \"19500404\",\n        \"primaryAddress\" : {\n            \n        }\n    }\n}",
			"folder": "97bcc234-d416-5ae1-cd07-1c02cd44d2ec"
		},
		{
			"id": "9c6bb337-36aa-2a5a-ddb6-13da60ab50f0",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses?page=0",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 500\"] = responseCode.code === 500;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455832339101,
			"name": "Courses - Invalid Args",
			"description": "Invalid args passed to course API",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": []
		},
		{
			"id": "a1dba4e5-a4ed-d933-7349-bb1f01091b59",
			"headers": "Authorization: {{authentication.guest_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/user",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\ntests[\"Should have exactly 4 validation errors\"] = data.validationErrors.length == 4;\nvar validationErrorsMap = new Map();\nfor (i=0; i<data.validationErrors.length; i++){\n    validationErrorsMap.set(data.validationErrors[i].fieldName, data.validationErrors[i].errorMessage);\n}\n\ntests[\"Username is a required field\"] = validationErrorsMap.get(\"username\") === \"Required field\";\ntests[\"Password is a required field\"] = validationErrorsMap.get(\"password\") === \"Required field\";\ntests[\"Last Four SSN is a required field\"] = validationErrorsMap.get(\"lastFourSSN\") === \"Required field\";\ntests[\"Timezone ID is a required field\"] = validationErrorsMap.get(\"timezoneId\") === \"Required field\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458759212459,
			"name": "Create Postman User for Input Validation",
			"description": "Create the postman user with invalid user information for validation testing",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": [],
			"rawModeData": "{\n    \"person\" : {\n        \"firstName\" : \"Postman\",\n        \"lastName\" : \"Postman\",\n        \"emailAddress\" : \"postman@atb.com\",\n        \"primaryPhone\" : \"5555555555\",\n        \"dateOfBirth\" : \"19500404\",\n        \"primaryAddress\" : {\n            \"address1\" : \"42 Woodland Drive\",\n            \"city\" : \"East Windsor\",\n            \"state\" : \"NJ\",\n            \"postalCode\" : \"08520\"\n        }\n    }\n}",
			"folder": "97bcc234-d416-5ae1-cd07-1c02cd44d2ec"
		},
		{
			"id": "a9f10585-ebe7-88c6-29fa-8b0d5922bedd",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/site?search=government",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\ntests[\"Current page is 1\"] = data.currentPage === 1;\ntests[\"Pages returned is more than zero\"] = data.pages.length > 0;\ntests[\"First page has a title\"] = data.pages[0].title.length > 0;\ntests[\"First page has content\"] = data.pages[0].content.length > 0;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831887742,
			"name": "Site - Search",
			"description": "Search the site by a keyword",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": []
		},
		{
			"id": "b6ff5cdf-142a-3f99-2f4a-9f4b013c1b9b",
			"headers": "Authorization: {{auth_token}}\n",
			"url": " http://{{url}}:{{port}}/api/courses?search=government&filter={facet-countall}delivery_method:Classroom - Day",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831783787,
			"name": "Courses- Search -Filter by Delivery Method",
			"description": "Courses - Search -Filter by DeliveryMethod",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd"
		},
		{
			"id": "b868c579-22b9-b7d2-71c9-0cf04e6ecad3",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses/session/55555",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\nvar data = JSON.parse(responseBody);\ntests[\"Check for valid error message\"] = data.message === \"No session found for session id 55555\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455832956922,
			"name": "Specific Course Session Error",
			"description": "See what a course session error looks like",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": []
		},
		{
			"id": "bf45328a-a7eb-76e1-c8e0-b0f4f81b2e48",
			"headers": "Authorization: {{auth_token}}\n",
			"url": " http://{{url}}:{{port}}/api/courses?search=&filter={facet-countall}category:Human Resources",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Body matches string\"] = responseBody.has(\"courses\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831751703,
			"name": "Courses- Search -Filter by Category",
			"description": "A Course Search by Category",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": []
		},
		{
			"id": "c2486fa5-4c59-42f5-d847-6aedfb56a05e",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses?search=government",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Body matches string\"] = responseBody.has(\"courses\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455830778929,
			"name": "Courses - Search",
			"description": "Search for a course by a description or course code",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": []
		},
		{
			"id": "c780e349-d640-ce07-abf3-8d185f9e70b5",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/site?search=&filter=content:Washington,%20DC",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\ntests[\"Current page is 1\"] = data.currentPage === 1;\ntests[\"Pages returned is more than zero\"] = data.pages.length > 0;\ntests[\"First page has a title\"] = data.pages[0].title.length > 0;\ntests[\"First page has content\"] = data.pages[0].content.length > 0;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831901017,
			"name": "Site - Search - By location",
			"description": "Search the site by a keyword and filter by location",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": []
		},
		{
			"id": "ce63e057-6829-3556-8b9c-b3b495c009f0",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses/sessions?status=c&sessiondomain=CD",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"data": null,
			"dataMode": "params",
			"name": "Sessions - All -Filter by Session Status and SessionDomain ",
			"description": "Sessions - All -Filter by Session Status and SessionDomain",
			"descriptionFormat": "html",
			"time": 1459347178806,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\ntests[\"Body matches string\"] = responseBody.has(\"classNumber\");",
			"currentHelper": "normal",
			"helperAttributes": {}
		},
		{
			"id": "d29c45ec-cd59-a57a-aeea-52125fdb28ae",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Body matches string\"] = responseBody.has(\"courses\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831799000,
			"name": "Courses - All",
			"description": "Get all courses",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": []
		},
		{
			"id": "d4c1356e-43cc-f85b-abc0-90d31bea2264",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses/session/610076",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n\ntests[\"Body matches string\"] = responseBody.has(\"610076\");\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831923721,
			"name": "Specific Course Session",
			"description": "Get Course Session",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": []
		},
		{
			"id": "d7323037-fcd6-3537-2d31-dfb2d6ea9216",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses/ADMB7006D001/sessions",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n\ntests[\"Body matches string\"] = responseBody.has(\"classNumber\");\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831837648,
			"name": "Course Sessions",
			"description": "Get Course Sessions",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": []
		},
		{
			"id": "e1898afc-de54-a654-ad42-ac1e588e105e",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses?search=&filter=status:C",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Response contains status facets\"] = responseBody.has(\"statusFacets\");\n\nvar data = JSON.parse(responseBody);\ntests[\"Check for status facet of 'C'\"] = data.statusFacets.C >= 0\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831731667,
			"name": "Courses - Search - Filter by Status",
			"description": "Search for a course by a description or course code and filter by status",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": []
		},
		{
			"id": "e4633a67-8117-d1f3-cbed-a798cb6a91a7",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses/categories",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\nvar data = JSON.parse(responseBody);\ntests[\"An array is returned\"] = data.length > 0;\ntests[\"First item has a category\"] = data[0].category.length > 0;\ntests[\"First item has a subject array\"] = data[0].courseSubject.length > 0;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831913078,
			"name": "Categories",
			"description": "Get course categories with a list o subjects in each category",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": []
		},
		{
			"folder": null,
			"id": "ee3d4402-0667-fcf8-8452-8cd49f7f6950",
			"name": "Environment Check",
			"dataMode": "params",
			"data": [],
			"rawModeData": null,
			"descriptionFormat": "html",
			"description": "An API to find out which environment you are running",
			"headers": "",
			"method": "GET",
			"pathVariables": {},
			"url": "http://{{url}}:{{port}}/api/env",
			"preRequestScript": "",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd"
		},
		{
			"id": "f448e814-73cc-c981-fb49-26cdff3804bc",
			"headers": "Authorization: {{authentication.authenticated_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/user/{{authentication.user_id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 204\"] = responseCode.code === 204;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1456592598557,
			"name": "Delete Postman User",
			"description": "Delete the postman user",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": [],
			"rawModeData": "",
			"folder": "97bcc234-d416-5ae1-cd07-1c02cd44d2ec"
		},
		{
			"id": "f79f097d-85d6-0890-32b2-76d7e854ecc9",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/locations",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\ntests[\"Contains Washington\"] = responseBody.has(\"Washington\");\ntests[\"Contains DC\"] = responseBody.has(\"DC\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831865224,
			"name": "Locations",
			"description": "Get Locations",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": []
		},
		{
			"id": "fc563678-7cfc-ab44-519a-5b4a8c3f962f",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses?search=government&filter=city_state:Jacksonville, FL",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Body matches string\"] = responseBody.has(\"courses\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831742056,
			"name": "Courses - Search - Filter by Location",
			"description": "Search for a course by a description or course code and filter by location",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": []
		},
		{
			"id": "fdca5ff5-7f18-46b6-492b-45ee346534a3",
			"headers": "Authorization: {{authentication.guest_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/user",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\ntests[\"Should have exactly 5 validation errors\"] = data.validationErrors.length == 5;\nvar validationErrorsMap = new Map();\nfor (i=0; i<data.validationErrors.length; i++){\n    validationErrorsMap.set(data.validationErrors[i].fieldName, data.validationErrors[i].errorMessage);\n}\n\ntests[\"First Name is a required field\"] = validationErrorsMap.get(\"person.firstName\") === \"Required field\";\ntests[\"Last Name is a required field\"] = validationErrorsMap.get(\"person.lastName\") === \"Required field\";\ntests[\"Email Address is a required field\"] = validationErrorsMap.get(\"person.emailAddress\") === \"Required field\";\ntests[\"Primary Phone is a required field\"] = validationErrorsMap.get(\"person.primaryPhone\") === \"Required field\";\ntests[\"Date of Birth is a required field\"] = validationErrorsMap.get(\"person.dateOfBirth\") === \"Required field\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458759556831,
			"name": "Create Postman User for Input Validation of Person",
			"description": "Create the postman user with invalid user information in Person Object for validation testing",
			"collectionId": "2b9724af-a930-dcb7-0f2d-100f049f7abd",
			"responses": [],
			"rawModeData": "{\n    \"username\" : \"postman@atb.com\",\n    \"password\" : \"test1234\",\n    \"lastFourSSN\" : \"4444\",\n    \"timezoneId\" : \"tzone000000000000012\",\n    \"person\" : {\n        \"primaryAddress\" : {\n            \"address1\" : \"42 Woodland Drive\",\n            \"city\" : \"East Windsor\",\n            \"state\" : \"NJ\",\n            \"postalCode\" : \"08520\"\n        }\n    }\n}",
			"folder": "97bcc234-d416-5ae1-cd07-1c02cd44d2ec"
		}
	]
}