{
	"id": "eb625399-b084-ec03-4d86-9a2f3022c318",
	"name": "GraduateSchool-API",
	"description": "",
	"order": [
		"af96f27e-fca5-d6ea-c065-ba50bc237009",
		"33bec079-d233-b098-b762-9a1c4f741def",
		"bbf2137f-94e3-8df4-3ecb-96bb23759755",
		"083e4e6c-bbb3-d465-c021-b60349ba1a20",
		"4533590c-742d-cdb0-aff9-4978e4ff7502",
		"c71c8b34-1aed-7b34-a684-8cd85f93a1b9",
		"063f04e3-bbb2-7483-d918-5050a9301438",
		"4badec23-7a09-9d44-9199-a3aeaa4bba2e",
		"2dc59ba0-b5e3-bbd7-b0c0-516e2f20a052",
		"b3a758d1-fbf5-7959-8456-a20f80fa7361",
		"0a88e4a8-ab66-c26c-bb8a-6b5cbe7faae7",
		"5325d101-b9af-80f3-f02a-a3f23154ffa5",
		"616c4fb9-f9fe-a856-f28c-7d5613225035",
		"31c29195-092a-0c05-29ab-92701fdb4cd6",
		"6ef4af13-c279-67de-4e15-cefa53271ea1",
		"9b0456a8-77aa-f8fd-d2f2-eb9f7c7d6b71",
		"a81496f6-1b6c-c7a8-472b-1f19a2dbd304",
		"93c76004-fbd1-9392-b9d0-841f11bc21f7",
		"7ed90f71-1f54-7bd3-d43d-bf1db046e10f",
		"409675ea-17a4-e3ee-4bde-ca5877d78472",
		"d64e1bf5-87d5-6eeb-6904-ce387eec095a",
		"3f79b77b-f46c-03ba-38a4-82611222c34f",
		"4ecd5c38-649f-9074-db32-3c8b2a2d1beb",
		"bf6c1f95-5e60-1642-9db7-9449da1c3cb4"
	],
	"folders": [
		{
			"id": "c73de2b6-bdc0-9dde-60f4-fc0ff97fce90",
			"name": "Authentication",
			"description": "",
			"order": [
				"456b0110-e9c2-f860-43c7-16b0066e24a2",
				"188fdb77-4d0f-1139-21b0-efb7febfb3c7",
				"b422628e-48c3-6ec7-e36b-078fbe6b8560",
				"44efe223-25fa-3c6c-5f1a-2b8b46cd9a3a",
				"59fa9574-2970-6acb-5481-1f19f35403bb",
				"b8afce51-6f45-db3f-a4e5-8942a13daf4d",
				"8f374e03-5a64-39b9-54d7-2e8b08a6c0f7",
				"8343216f-49d4-2958-74e2-cb6e83a39cee",
				"fc7cd3b3-387c-6a59-203d-6acd0325e678",
				"bc49093c-9427-f643-9597-7f17a6704219",
				"e8cc4d5d-2052-c345-ba34-a7af49d708a8",
				"a6176e6b-ab73-14ae-76ac-67ebcf524e87",
				"fd39dfcd-5379-4deb-2bf1-3ebfe547320f",
				"e9e435c7-557d-bbea-3f64-f60a0317b2af"
			],
			"owner": "221129",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318"
		}
	],
	"timestamp": 1436731751085,
	"owner": "221129",
	"remoteLink": "",
	"public": false,
	"requests": [
		{
			"id": "063f04e3-bbb2-7483-d918-5050a9301438",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses?search=&filter=status:C",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Response contains status facets\"] = responseBody.has(\"statusFacets\");\n\nvar data = JSON.parse(responseBody);\ntests[\"Check for status facet of 'C'\"] = data.statusFacets.C >= 0\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831731667,
			"name": "Courses - Search - Filter by Status",
			"description": "Search for a course by a description or course code and filter by status",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": []
		},
		{
			"id": "083e4e6c-bbb3-d465-c021-b60349ba1a20",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses?search=government",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Body matches string\"] = responseBody.has(\"courses\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455830778929,
			"name": "Courses - Search",
			"description": "Search for a course by a description or course code",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": []
		},
		{
			"id": "0a88e4a8-ab66-c26c-bb8a-6b5cbe7faae7",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Body matches string\"] = responseBody.has(\"courses\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831799000,
			"name": "Courses - All",
			"description": "Get all courses",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": []
		},
		{
			"id": "188fdb77-4d0f-1139-21b0-efb7febfb3c7",
			"headers": "Authorization: {{authentication.guest_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/authentication",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 401\"] = responseCode.code === 401;\n\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Invalid user message\"] = jsonData.message === \"Invalid user\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1456589788349,
			"name": "Postman User Authentication Should Fail",
			"description": "Verify that the postman user cannot login since the user does not exist at this point.",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": [],
			"folder": "c73de2b6-bdc0-9dde-60f4-fc0ff97fce90",
			"rawModeData": "{\n\"username\" : \"postman@atb.com\",\n\"password\" : \"test1234\"\n}"
		},
		{
			"id": "2dc59ba0-b5e3-bbd7-b0c0-516e2f20a052",
			"headers": "Authorization: {{auth_token}}\n",
			"url": " http://{{url}}:{{port}}/api/courses?search=&filter={facet-countall}category:Human Resources",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Body matches string\"] = responseBody.has(\"courses\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831751703,
			"name": "Courses- Search -Filter by Category",
			"description": "A Course Search by Category",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": []
		},
		{
			"id": "31c29195-092a-0c05-29ab-92701fdb4cd6",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses/BAD1234",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\nvar data = JSON.parse(responseBody);\ntests[\"Check for valid error message\"] = data.message === \"No course found for course courseId BAD1234\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831824857,
			"name": "Course Detail Error",
			"description": "No course found for Course Code",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": []
		},
		{
			"folder": null,
			"id": "33bec079-d233-b098-b762-9a1c4f741def",
			"name": "Environment Check",
			"dataMode": "params",
			"data": [],
			"rawModeData": null,
			"descriptionFormat": "html",
			"description": "An API to find out which environment you are running",
			"headers": "",
			"method": "GET",
			"pathVariables": {},
			"url": "http://{{url}}:{{port}}/api/env",
			"preRequestScript": "",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318"
		},
		{
			"id": "3f79b77b-f46c-03ba-38a4-82611222c34f",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses/sessions/55555",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\nvar data = JSON.parse(responseBody);\ntests[\"Check for valid error message\"] = data.message === \"No session found for session id 55555\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461680503443,
			"name": "Specific Course Session Error",
			"description": "See what a course session error looks like",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": []
		},
		{
			"id": "409675ea-17a4-e3ee-4bde-ca5877d78472",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses/categories",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\nvar data = JSON.parse(responseBody);\ntests[\"An array is returned\"] = data.length > 0;\ntests[\"First item has a category\"] = data[0].category.length > 0;\ntests[\"First item has a subject array\"] = data[0].courseSubject.length > 0;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831913078,
			"name": "Categories",
			"description": "Get course categories with a list o subjects in each category",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": []
		},
		{
			"id": "44efe223-25fa-3c6c-5f1a-2b8b46cd9a3a",
			"headers": "Authorization: {{authentication.guest_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/users",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\ntests[\"Should have exactly 5 validation errors\"] = data.validationErrors.length == 5;\nvar validationErrorsMap = new Map();\nfor (i=0; i<data.validationErrors.length; i++){\n    validationErrorsMap.set(data.validationErrors[i].fieldName, data.validationErrors[i].errorMessage);\n}\n\ntests[\"First Name is a required field\"] = validationErrorsMap.get(\"person.firstName\") === \"Required field\";\ntests[\"Last Name is a required field\"] = validationErrorsMap.get(\"person.lastName\") === \"Required field\";\ntests[\"Email Address is a required field\"] = validationErrorsMap.get(\"person.emailAddress\") === \"Required field\";\ntests[\"Primary Phone is a required field\"] = validationErrorsMap.get(\"person.primaryPhone\") === \"Required field\";\ntests[\"Date of Birth is a required field\"] = validationErrorsMap.get(\"person.dateOfBirth\") === \"Required field\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461680373528,
			"name": "Create Postman User for Input Validation of Person",
			"description": "Create the postman user with invalid user information in Person Object for validation testing",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": [],
			"rawModeData": "{\n    \"username\" : \"postman@atb.com\",\n    \"password\" : \"test1234\",\n    \"lastFourSSN\" : \"4444\",\n    \"timezoneId\" : \"tzone000000000000012\",\n    \"person\" : {\n        \"primaryAddress\" : {\n            \"address1\" : \"42 Woodland Drive\",\n            \"city\" : \"East Windsor\",\n            \"state\" : \"NJ\",\n            \"postalCode\" : \"08520\"\n        }\n    }\n}",
			"folder": "c73de2b6-bdc0-9dde-60f4-fc0ff97fce90"
		},
		{
			"id": "4533590c-742d-cdb0-aff9-4978e4ff7502",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses?page=0",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 500\"] = responseCode.code === 500;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455832339101,
			"name": "Courses - Invalid Args",
			"description": "Invalid args passed to course API",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": []
		},
		{
			"id": "456b0110-e9c2-f860-43c7-16b0066e24a2",
			"headers": "",
			"url": "http://{{url}}:{{port}}/api/tokens",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\npostman.setGlobalVariable(\"authentication.guest_token\", data.token);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461680355115,
			"name": "Get Guest Token",
			"description": "Get a guest token to be used for the authentication test collection",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": [],
			"folder": "c73de2b6-bdc0-9dde-60f4-fc0ff97fce90"
		},
		{
			"id": "4badec23-7a09-9d44-9199-a3aeaa4bba2e",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses?search=government&filter=city_state:Jacksonville, FL",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Body matches string\"] = responseBody.has(\"courses\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831742056,
			"name": "Courses - Search - Filter by Location",
			"description": "Search for a course by a description or course code and filter by location",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": []
		},
		{
			"id": "4ecd5c38-649f-9074-db32-3c8b2a2d1beb",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses/sessions",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"data": null,
			"dataMode": "params",
			"name": "Sessions - All",
			"description": "",
			"descriptionFormat": "html",
			"time": 1458852618739,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n\ntests[\"Body matches string\"] = responseBody.has(\"classNumber\");",
			"currentHelper": "normal",
			"helperAttributes": {}
		},
		{
			"id": "5325d101-b9af-80f3-f02a-a3f23154ffa5",
			"headers": "Authorization: {{auth_token}}\n",
			"url": " http://{{url}}:{{port}}/api/courses?search=government&filter={facet-countall}delivery_method:Classroom - Day",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831783787,
			"name": "Courses- Search -Filter by Delivery Method",
			"description": "Courses - Search -Filter by DeliveryMethod",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318"
		},
		{
			"id": "59fa9574-2970-6acb-5481-1f19f35403bb",
			"headers": "Authorization: {{authentication.guest_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/users",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\ntests[\"Should have exactly 4 validation errors\"] = data.validationErrors.length == 4;\nvar validationErrorsMap = new Map();\nfor (i=0; i<data.validationErrors.length; i++){\n    validationErrorsMap.set(data.validationErrors[i].fieldName, data.validationErrors[i].errorMessage);\n}\n\ntests[\"Username is a required field\"] = validationErrorsMap.get(\"username\") === \"Required field\";\ntests[\"Password is a required field\"] = validationErrorsMap.get(\"password\") === \"Required field\";\ntests[\"Last Four SSN is a required field\"] = validationErrorsMap.get(\"lastFourSSN\") === \"Required field\";\ntests[\"Timezone ID is a required field\"] = validationErrorsMap.get(\"timezoneId\") === \"Required field\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461680377928,
			"name": "Create Postman User for Input Validation",
			"description": "Create the postman user with invalid user information for validation testing",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": [],
			"rawModeData": "{\n    \"person\" : {\n        \"firstName\" : \"Postman\",\n        \"lastName\" : \"Postman\",\n        \"emailAddress\" : \"postman@atb.com\",\n        \"primaryPhone\" : \"5555555555\",\n        \"dateOfBirth\" : \"19500404\",\n        \"primaryAddress\" : {\n            \"address1\" : \"42 Woodland Drive\",\n            \"city\" : \"East Windsor\",\n            \"state\" : \"NJ\",\n            \"postalCode\" : \"08520\"\n        }\n    }\n}",
			"folder": "c73de2b6-bdc0-9dde-60f4-fc0ff97fce90"
		},
		{
			"id": "616c4fb9-f9fe-a856-f28c-7d5613225035",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses/ADMB7006D001",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\ntests[\"Check id\"] = data.id === \"ADMB7006D001\";\ntests[\"Check code\"] = data.code === \"ADMB7006D\";\ntests[\"Objective exists\"] = data.objective.length > 0;\ntests[\"Outcomes exists\"] = data.outcomes.length > 0;\ntests[\"Description exists\"] = data.description.formatted.length > 0;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831808191,
			"name": "Course Detail",
			"description": "Get course detail",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": []
		},
		{
			"id": "6ef4af13-c279-67de-4e15-cefa53271ea1",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses/ADMB7006D001/sessions",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n\ntests[\"Body matches string\"] = responseBody.has(\"classNumber\");\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831837648,
			"name": "Course Sessions",
			"description": "Get Course Sessions",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": []
		},
		{
			"id": "7ed90f71-1f54-7bd3-d43d-bf1db046e10f",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/site?search=&filter=content:Washington,%20DC",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\ntests[\"Current page is 1\"] = data.currentPage === 1;\ntests[\"Pages returned is more than zero\"] = data.pages.length > 0;\ntests[\"First page has a title\"] = data.pages[0].title.length > 0;\ntests[\"First page has content\"] = data.pages[0].content.length > 0;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831901017,
			"name": "Site - Search - By location",
			"description": "Search the site by a keyword and filter by location",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": []
		},
		{
			"id": "8343216f-49d4-2958-74e2-cb6e83a39cee",
			"headers": "Authorization: {{authentication.guest_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/users",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 409\"] = responseCode.code === 409;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1462215395600,
			"name": "Create Postman User throws Duplicate User Exception",
			"description": "Create the postman user for the authentication tests",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": [],
			"rawModeData": "{\n    \"username\" : \"postman@atb.com\",\n    \"password\" : \"test1234\",\n    \"lastFourSSN\" : \"4444\",\n    \"timezoneId\" : \"tzone000000000000012\",\n    \"person\" : {\n        \"firstName\" : \"Postman\",\n        \"lastName\" : \"Postman\",\n        \"emailAddress\" : \"postman@atb.com\",\n        \"primaryPhone\" : \"5555555555\",\n        \"dateOfBirth\" : \"19500404\",\n        \"primaryAddress\" : {\n            \"address1\" : \"42 Woodland Drive\",\n            \"city\" : \"East Windsor\",\n            \"state\" : \"NJ\",\n            \"postalCode\" : \"08520\"\n        }\n    }\n}"
		},
		{
			"id": "8f374e03-5a64-39b9-54d7-2e8b08a6c0f7",
			"headers": "Authorization: {{authentication.guest_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/authentication",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Verify successful authentication\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\n\ntests[\"Verify correct user\"] = data.user.id === postman.getGlobalVariable(\"authentication.user_id\");\ntests[\"Verify renewal token created\"] = data.renewalToken.token;\n\npostman.setGlobalVariable(\"authentication.authenticated_token\", data.authToken.token);\npostman.setGlobalVariable(\"authentication.renewal_token\", data.renewalToken.token);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461181834225,
			"name": "Postman User Authentication Should Succeed",
			"description": "Verify that the postman user can login",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": [],
			"rawModeData": "{\n\"username\" : \"postman@atb.com\",\n\"password\" : \"test1234\"\n}",
			"folder": "c73de2b6-bdc0-9dde-60f4-fc0ff97fce90"
		},
		{
			"id": "93c76004-fbd1-9392-b9d0-841f11bc21f7",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/site?search=government",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\ntests[\"Current page is 1\"] = data.currentPage === 1;\ntests[\"Pages returned is more than zero\"] = data.pages.length > 0;\ntests[\"First page has a title\"] = data.pages[0].title.length > 0;\ntests[\"First page has content\"] = data.pages[0].content.length > 0;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831887742,
			"name": "Site - Search",
			"description": "Search the site by a keyword",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": []
		},
		{
			"id": "9b0456a8-77aa-f8fd-d2f2-eb9f7c7d6b71",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses/BAD12345/sessions",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\nvar data = JSON.parse(responseBody);\ntests[\"Check for valid error message\"] = data.message === \"No sessions found for course courseId BAD12345\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831846943,
			"name": "Course Sessions Error",
			"description": "See what a course session error looks like",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": []
		},
		{
			"id": "a6176e6b-ab73-14ae-76ac-67ebcf524e87",
			"headers": "Authorization: {{authentication.authenticated_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/users/{{authentication.user_id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 204\"] = responseCode.code === 204;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461680419440,
			"name": "Delete Postman User",
			"description": "Delete the postman user",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": [],
			"rawModeData": "",
			"folder": "c73de2b6-bdc0-9dde-60f4-fc0ff97fce90"
		},
		{
			"id": "a81496f6-1b6c-c7a8-472b-1f19a2dbd304",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/locations",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\ntests[\"Contains Washington\"] = responseBody.has(\"Washington\");\ntests[\"Contains DC\"] = responseBody.has(\"DC\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831865224,
			"name": "Locations",
			"description": "Get Locations",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": []
		},
		{
			"folder": null,
			"id": "af96f27e-fca5-d6ea-c065-ba50bc237009",
			"name": "Ping",
			"dataMode": "params",
			"data": [],
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "A ping test API",
			"headers": "",
			"method": "GET",
			"pathVariables": {},
			"url": "http://{{url}}:{{port}}/api/ping",
			"preRequestScript": "",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318"
		},
		{
			"id": "b3a758d1-fbf5-7959-8456-a20f80fa7361",
			"headers": "Authorization: {{auth_token}}\n",
			"url": " http://{{url}}:{{port}}/api/courses?search=government&filter={facet-countall}category_subject:Accounting~Accounting",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Body matches string\"] = responseBody.has(\"courses\");\nvar data = JSON.parse(responseBody);\ntests[\"Results Found\"] = data.numFound != 0;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831767286,
			"name": "Courses- Search -Filter by Category Subject",
			"description": "A Course Search by Category Subject",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": []
		},
		{
			"id": "b422628e-48c3-6ec7-e36b-078fbe6b8560",
			"headers": "Authorization: {{authentication.guest_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/users",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\ntests[\"Should have exactly 4 validation errors\"] = data.validationErrors.length == 4;\nvar validationErrorsMap = new Map();\nfor (i=0; i<data.validationErrors.length; i++){\n    validationErrorsMap.set(data.validationErrors[i].fieldName, data.validationErrors[i].errorMessage);\n}\n\ntests[\"Address1 is a required field\"] = validationErrorsMap.get(\"person.primaryAddress.address1\") === \"Required field\";\ntests[\"City is a required field\"] = validationErrorsMap.get(\"person.primaryAddress.city\") === \"Required field\";\ntests[\"State is a required field\"] = validationErrorsMap.get(\"person.primaryAddress.state\") === \"Required field\";\ntests[\"Postal Code is a required field\"] = validationErrorsMap.get(\"person.primaryAddress.postalCode\") === \"Required field\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461680369673,
			"name": "Create Postman User for Input Validation of Address",
			"description": "Create the postman user with invalid user information in Address Object for validation testing",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": [],
			"rawModeData": "{\n    \"username\" : \"postman@atb.com\",\n    \"password\" : \"test1234\",\n    \"lastFourSSN\" : \"4444\",\n    \"timezoneId\" : \"tzone000000000000012\",\n    \"person\" : {\n        \"firstName\" : \"Postman\",\n        \"lastName\" : \"Postman\",\n        \"emailAddress\" : \"postman@atb.com\",\n        \"primaryPhone\" : \"5555555555\",\n        \"dateOfBirth\" : \"19500404\",\n        \"primaryAddress\" : {\n            \n        }\n    }\n}",
			"folder": "c73de2b6-bdc0-9dde-60f4-fc0ff97fce90"
		},
		{
			"id": "b8afce51-6f45-db3f-a4e5-8942a13daf4d",
			"headers": "Authorization: {{authentication.guest_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/users",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar data = JSON.parse(responseBody);\npostman.setGlobalVariable(\"authentication.user_id\", data.id);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461680381945,
			"name": "Create Postman User",
			"description": "Create the postman user for the authentication tests",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": [],
			"rawModeData": "{\n    \"username\" : \"postman@atb.com\",\n    \"password\" : \"test1234\",\n    \"lastFourSSN\" : \"4444\",\n    \"timezoneId\" : \"tzone000000000000012\",\n    \"person\" : {\n        \"firstName\" : \"Postman\",\n        \"lastName\" : \"Postman\",\n        \"emailAddress\" : \"postman@atb.com\",\n        \"primaryPhone\" : \"5555555555\",\n        \"dateOfBirth\" : \"19500404\",\n        \"primaryAddress\" : {\n            \"address1\" : \"42 Woodland Drive\",\n            \"city\" : \"East Windsor\",\n            \"state\" : \"NJ\",\n            \"postalCode\" : \"08520\"\n        }\n    }\n}",
			"folder": "c73de2b6-bdc0-9dde-60f4-fc0ff97fce90"
		},
		{
			"id": "bbf2137f-94e3-8df4-3ecb-96bb23759755",
			"headers": "",
			"url": "http://{{url}}:{{port}}/api/tokens",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\npostman.setGlobalVariable(\"auth_token\", data.token);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461680434436,
			"name": "Get Token",
			"description": "Get auth token",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": []
		},
		{
			"id": "bc49093c-9427-f643-9597-7f17a6704219",
			"headers": "Authorization: {{authentication.authenticated_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/registrations/users/{{authentication.user_id}}/sessions/555555",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461680410787,
			"name": "Get Registrations for User by Session",
			"description": "Verify that no registrations for the user",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": [],
			"folder": "c73de2b6-bdc0-9dde-60f4-fc0ff97fce90"
		},
		{
			"id": "bf6c1f95-5e60-1642-9db7-9449da1c3cb4",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses/sessions?status=c&sessiondomain=CD",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"data": null,
			"dataMode": "params",
			"name": "Sessions - All -Filter by Session Status and SessionDomain ",
			"description": "Sessions - All -Filter by Session Status and SessionDomain",
			"descriptionFormat": "html",
			"time": 1459347178806,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\ntests[\"Body matches string\"] = responseBody.has(\"classNumber\");",
			"currentHelper": "normal",
			"helperAttributes": {}
		},
		{
			"id": "c71c8b34-1aed-7b34-a684-8cd85f93a1b9",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses?search=government&page=2&numRequested=10",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\ntests[\"Current page is 2\"] = data.currentPage === 2;\ntests[\"Num requested is 10\"] = data.numRequested === 10;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455831595202,
			"name": "Courses - Search - Pagination",
			"description": "Search for a course by a description or course code with page and nuumber requested specified",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": []
		},
		{
			"id": "d64e1bf5-87d5-6eeb-6904-ce387eec095a",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "http://{{url}}:{{port}}/api/courses/sessions/610076",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n\ntests[\"Body matches string\"] = responseBody.has(\"610076\");\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461680498475,
			"name": "Specific Course Session",
			"description": "Get Course Session",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": []
		},
		{
			"id": "e8cc4d5d-2052-c345-ba34-a7af49d708a8",
			"headers": "Authorization: {{authentication.authenticated_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/reauthentication",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Verify successful reAuthentication\"] = responseCode.code === 200;\n\ntests[\"Verify body is empty\"] = responseBody === \"\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461243626817,
			"name": "Postman User ReAuthorize Token AuthToken Still Valid",
			"description": "",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": [],
			"rawModeData": "{\n    \"authToken\" : {\n        \"token\" : \"{{authentication.authenticated_token}}\"\n    },\n    \"renewalToken\" : {\n        \"token\" : \"{{authentication.renewal_token}}\"\n    }\n}",
			"folder": "c73de2b6-bdc0-9dde-60f4-fc0ff97fce90"
		},
		{
			"id": "e9e435c7-557d-bbea-3f64-f60a0317b2af",
			"headers": "Authorization: {{authentication.guest_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/authentication",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Verify unauthorized\"] = responseCode.code === 401;\n\npostman.clearGlobalVariable(\"authentication.user_id\");\npostman.clearGlobalVariable(\"authentication.guest_token\");\npostman.clearGlobalVariable(\"authentication.authenticated_token\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1456591230081,
			"name": "Postman User Authentication Should Fail Again",
			"description": "Verify that the postman user can no longer login",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": [],
			"rawModeData": "{\n\"username\" : \"postman@atb.com\",\n\"password\" : \"test1234\"\n}",
			"folder": "c73de2b6-bdc0-9dde-60f4-fc0ff97fce90"
		},
		{
			"id": "fc7cd3b3-387c-6a59-203d-6acd0325e678",
			"headers": "Authorization: {{authentication.authenticated_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/users/{{authentication.user_id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Verify successful authentication\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\n\ntests[\"Verify correct user\"] = data.id === postman.getGlobalVariable(\"authentication.user_id\");\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461680401363,
			"name": "Get Postman User by ID",
			"description": "Get the postman user by the user id",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": [],
			"folder": "c73de2b6-bdc0-9dde-60f4-fc0ff97fce90"
		},
		{
			"id": "fd39dfcd-5379-4deb-2bf1-3ebfe547320f",
			"headers": "Authorization: {{authentication.authenticated_token}}\nContent-Type: application/json\n",
			"url": "http://{{url}}:{{port}}/api/users/{{authentication.user_id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Verify user not found\"] = responseCode.code === 404;\n\nvar data = JSON.parse(responseBody);\n\ntests[\"Verify correct message\"] = data.message === (\"User not found by id \" + postman.getGlobalVariable(\"authentication.user_id\"));\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461680425091,
			"name": "Get Postman User by ID Should Not Be Found",
			"description": "Verify that the postman user has been deleted",
			"collectionId": "eb625399-b084-ec03-4d86-9a2f3022c318",
			"responses": [],
			"folder": "c73de2b6-bdc0-9dde-60f4-fc0ff97fce90"
		}
	]
}