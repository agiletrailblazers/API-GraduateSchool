property.name=test

search.solr.endpoint=http://ec2-52-2-60-235.compute-1.amazonaws.com:9090
search.solr.credentials=x:y

course.search.solr.query=/solr/courses/select?q=(course_name:(*{search}*))^3 OR (course_id:(*{search}*))^9 OR (course_code:(*{search}*))^6 OR (course_description:(*{search}*)) OR (course_abstract:(*{search}*)) OR (course_prerequisites:(*{search}*))&fq=course_description:[* TO *]&start={start}&rows={numRequested}&wt=json&indent=true{filter}&sort={sort}
course.search.page.size=10
course.search.facet.location.exclude=Exclude,PA
course.search.sort.score=score desc
course.search.sort.course_id=course_id asc

site.search.solr.query=/solr/nutch-core/select?q=(title:(*{search}*)) AND (content:(*{search}*))&start={start}&rows={numRequested}&wt=json
site.search.title.exclude=Graduate School USA |

datasource.driverClassName=
datasource.url=
datasource.username=
datasource.password=

sql.course.single.query=
sql.course.competency.query=
sql.course.session.query=
sql.course.session.single.query=test-sql-course-session-single-query
sql.location.city.state.query=
sql.course.all.query=
sql.category.subject.query=
sql.user.single.query=
sql.user.login.query=login query
sql.user.personInsert.procedure = test1
sql.user.profileInsert.procedure = test2
sql.user.listEntryInsert.procedure = test3
sql.user.deleteUser.procedure =

sql.user.personId.sequence = test1
sql.user.profileId.sequence = test2
sql.user.listEntry.sequence = test

sql.registration.offeringActionInsert.procedure =
sql.registration.insertRegistration.procedure =
sql.registration.insertOrder.procedure =
sql.registration.insertOrderItem.procedure =
sql.registration.insertCharge.procedure =
sql.registration.insertPayment.procedure =
sql.registration.orderComplete.procedure =

sql.registration.offeringActionId.sequence = testOfferActionId
sql.registration.registrationId.sequence = testRegistrationId
sql.registration.orderId.sequence = testOrderId
sql.registration.orderItemId.sequence = testOrderItemId
sql.registration.chargeId.sequence = testChargeId
sql.registration.paymentId.sequence = testPaymentId

sql.registration.getOrderNo.query =

course.interval.default=Variable

log.level.api=debug

auth.token.filter.active=false
auth.token.expire.minutes=5
auth.token.password=blahblahblah
auth.token.filter.uri.no.token.required=/api/token,/api/env,/api/ping
auth.token.filter.uri.guest.token.required=/api/site,/api/locations,/api/courses,/api/courses/\\w+$,/api/courses/\\w+/sessions,/api/courses/session/\\w+$,/api/courses/categories,/api/user,/api/authentication
auth.token.header=Authorization
auth.user.attribute=X-Auth-User

# CyberSource client properties
cybersource.merchantID=fakemerchantid
cybersource.keysDirectory=fakedirectory
cybersource.keyFilename=fakemerchantid.p12
cybersource.targetAPIVersion=1.123
cybersource.serverURL=fakeserverurl
cybersource.useHttpClient=true
cybersource.timeout=5000
cybersource.sendToProduction=false
cybersource.enableLog=false
cybersource.logDirectory=somedirectory
cybersource.logMaximumSize=10
