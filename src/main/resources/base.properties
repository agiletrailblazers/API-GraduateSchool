course.search.solr.query=/solr/courses/select?q=(course_name:(*{search}*))^9 OR (course_id:(*{search}*))^9 OR (course_code:(*{search}*))^6 OR (course_description:(*{search}*)) OR (course_abstract:(*{search}*)) OR (course_prerequisites:(*{search}*))&fq=course_description:[* TO *]&start={start}&rows={numRequested}&wt=json&indent=true{filter}&group=true&group.field=course_id&group.facet=true&group.ngroups=true&group.format=simple&facet=true&facet.field={facet-exclude}city_state&facet.field=status&facet.field={facet-exclude}category_subject&sort={sort}&f.category_subject.facet.sort=index&facet.field={facet-exclude}delivery_method&f.delivery_method.facet.sort=index
course.search.facet.location.exclude=Distance Education, ;, ;DC, ;
course.search.page.size=10
course.search.sort.score=score desc
course.search.sort.course_id=course_id asc

site.search.solr.query=/solr/nutch-core/select?q=(alternate-searchby:(*{search}*))^9 OR (content:(*{search}*))&fq=content:[* TO *]&start={start}&rows={numRequested}&group=true&group.field=alternate-groupby&facet=true&group.ngroups=true&group.format=simple&wt=json{filter}
site.search.title.exclude=Graduate School USA |,Microsoft Word -

sql.course.single.query=SELECT L.ID, \
OFFERING_TEMPLATE_NO CD_CRS, \
SUBSTR(OFFERING_TEMPLATE_NO, 1, LENGTH(OFFERING_TEMPLATE_NO)-3) CD_CRS_COURSE, \
TITLE NM_CRS, \
(DD.DETAIL1 || DD.DETAIL2 || DD.DETAIL3 || DD.DETAIL4) DESC_FORMAT, \
CUSTOM12 MARKETING, \
CUSTOM14 SUBJECT, \
DO.NAME CD_SEG, \
(SELECT STR_VALUE from FGT_DD_CUSTOM WHERE ATTR_TYPE = 1 AND OWNER_ID = L.ID) TM_CD_DUR, \
(SELECT STR_VALUE from FGT_DD_CUSTOM WHERE ATTR_TYPE = 18 AND OWNER_ID = L.ID AND STR_VALUE IN ('MN','HR','YR','WK','Y','MI','DY','MNTH')) TX_CRS_INTERVAL, \
CASE  WHEN SUBSTR(OFFERING_TEMPLATE_NO, 1, LENGTH(OFFERING_TEMPLATE_NO)-3) like '%N' THEN 'Distance Education'  \
WHEN D.NAME = 'Classroom' AND (SUBSTR(L.OFFERING_TEMPLATE_NO, 1,  \
LENGTH(L.OFFERING_TEMPLATE_NO)-3) like  '%D' OR SUBSTR(L.OFFERING_TEMPLATE_NO, 1,  \
LENGTH(L.OFFERING_TEMPLATE_NO)-3) like  '%G'OR SUBSTR(L.OFFERING_TEMPLATE_NO, 1,  \
LENGTH(L.OFFERING_TEMPLATE_NO)-3) like  '%T'OR SUBSTR(L.OFFERING_TEMPLATE_NO, 1,  \
LENGTH(L.OFFERING_TEMPLATE_NO)-3) like  '%L') THEN 'Classroom - Daytime'  \
WHEN D.NAME = 'Classroom' AND SUBSTR(L.OFFERING_TEMPLATE_NO, 1, LENGTH(L.OFFERING_TEMPLATE_NO)-3) like '%E' THEN 'Classroom - Evening'  \
ELSE D.NAME \
END as TYPE, \
(SELECT MAX(CREDITS) FROM LET_CED_CREDITS WHERE FOS_ID='fldst000000000001001' AND OWNER_ID = l.ID) CPE_CREDIT, \
(SELECT MAX(CREDITS) FROM LET_CED_CREDITS WHERE FOS_ID IN('fldst000000000001000','fldst000000000001002') AND OWNER_ID = l.ID) CEU_CREDIT, \
(SELECT MAX(CREDITS) FROM LET_CED_CREDITS WHERE FOS_ID='fldst000000000001003' AND OWNER_ID = l.ID) ACE_CREDIT, \
(AD.DETAIL1 || AD.DETAIL2 || AD.DETAIL3 || AD.DETAIL4) ABSTRACT, \
CUSTOM10 PREREQUISITES \
FROM LET_EXT_OFFERING_TEMPLATE L, \
FGT_DETAIL DD, \
FGT_DETAIL AD, \
FGT_DOMAIN DO, \
LET_EXT_DELIVERY D, \
TPT_OFFER_TEMP_DEL OTD \
WHERE L.DESCRIPTION = DD.ID(+) \
AND L.ABSTRACT = AD.ID(+) \
AND L.SPLIT = DO.ID(+) \
AND L.ID = OTD.OFFERING_TEMP_ID(+) \
AND OTD.DELIVERY_ID = D.ID(+) \
AND (OFFERING_TEMPLATE_NO = ? OR SUBSTR(OFFERING_TEMPLATE_NO, 1, LENGTH(OFFERING_TEMPLATE_NO)-3) = ?) \
AND SUBSTR(L.FLAGS, 4, 1) = 1 \
AND DD.DETAIL1 is not null AND DD.DETAIL1 != '<DIV></DIV>' AND ROWNUM = 1
	
sql.course.competency.query=select DESCRIPTION, DESCRIPTION2, NAME, CUSTOM0 from FGT_EXT_COMPETENCY where DESCRIPTION2=? or DESCRIPTION like ?
  
sql.course.session.query=select DISTINCT T.OFFERING_TEMPLATE_NO CD_CRS, \
T.ID COURSE_ID, \
SUBSTR(T.OFFERING_TEMPLATE_NO, 1, LENGTH(OFFERING_TEMPLATE_NO)-3) CD_CRS_COURSE, \
T.TITLE NM_CRS, \
COALESCE(S.ID,SP.ID,PC.ID) OFFERING_SESSION_ID, \
COALESCE(S.CLASS_NO,SP.PART_NO,PC.PART_NO) CLASS_NO, \
COALESCE(S.CUSTOM10,SP.CUSTOM2,PC.CUSTOM2) CD_SEG, \
COALESCE(S.START_DATE,SP.AVAIL_FROM,PC.AVAIL_FROM) START_DATE, \
COALESCE(S.END_DATE,SP.DISC_FROM,PC.DISC_FROM) END_DATE, \
COALESCE(S.CUSTOM4,SPD.DETAIL1,PCD.DETAIL1) NOTES, \
NVL(S.MAX_CT,0) MAX_STUD_COUNT, \
NVL(S.STUD_CT,0) REGISTERED_STUD_COUNT, \
NVL(S.MIN_CT,0) MIN_STUD_COUNT, \
S.CUSTOM9 STATUS, \
E.START_TIME START_TIME, \
E.END_TIME END_TIME,\
F.NAME FACILITY_NAME, \
F.FACILITY_NO FACILITY_NO, \
F.CONTACT_PHONE CONTACT_PHONE, \
COALESCE(SESSION_PRICE.AMOUNT, SELF_PACED_PRICE.AMOUNT, CATALOG_PRICE.AMOUNT) TUITION, \
S.SESSION_TEMPLATE SESSION_TEMPLATE, \
FA.ADDR1 ADDR1, \
FA.ADDR2 ADDR2, \
FA.CITY CITY, \
FA.STATE STATE, \
FA.ZIP ZIP, \
PE.PERSON_NO PERSON_NO, \
PE.FNAME FNAME, \
PE.LNAME LNAME, \
LEC.CURRICULUMTITLE CURRICUM_TITLE, \
LEC.TABDISPLAYORDER CURRICUMTABDISPLAYORDER \
from LET_EXT_OFFERING_TEMPLATE T, \
LET_EXT_OFFERING_SESSION S, \
TPT_FACILITY F, \
TPT_PL_LIST_ENTRY SESSION_PRICE, \
TPT_PL_LIST_ENTRY SELF_PACED_PRICE, \
TPT_PL_LIST_ENTRY CATALOG_PRICE, \
FGT_TIME_ELEMENT E, \
LET_EXT_OFFERING_SELFPACED SP, \
TPT_EXT_PRODUCT_CATALOG PC, \
FGT_DETAIL SPD, \
FGT_DETAIL PCD, \
FGT_ADDRESS FA, \
CMT_PERSON PE, \
LET_EXT_CURRICULUM LEC \
where \
S.ID               = E.OWNER_ID (+) \
AND FA.OWNER_ID (+) = F.ID  \
AND T.ID           = S.OFFERING_TEMP_ID(+) \
AND S.ID           = SESSION_PRICE.PART_ID(+) \
AND SP.ID           = SELF_PACED_PRICE.PART_ID(+) \
AND PC.ID           = CATALOG_PRICE.PART_ID(+) \
AND T.ID           = SP.OFFERING_TEMP_ID(+) \
AND T.ID           = PC.OFFERING_TEMP_ID(+) \
AND S.CSR_ID       = PE.ID(+) \
AND S.FACILITY_ID  = F.ID(+) \
AND SP.DESCRIPTION = SPD.ID(+) \
AND PC.DESCRIPTION = PCD.ID(+) \
AND T.CUSTOM0=LEC.CURRICULUMCOURSECODE(+) \
AND (T.OFFERING_TEMPLATE_NO = ? OR SUBSTR(T.OFFERING_TEMPLATE_NO, 1, LENGTH(T.OFFERING_TEMPLATE_NO)-3) = ?) \
AND ((S.CUSTOM9 in ('C','S') AND SUBSTR(S.FLAGS, 7, 1) = 1 AND  S.END_DATE >= current_timestamp at time zone 'EST') \
 OR (SUBSTR(SP.FLAGS,1,1)=1 AND (SP.DISC_FROM IS NULL OR SP.DISC_FROM >= current_timestamp at time zone 'EST')) \
 OR (SUBSTR(PC.FLAGS,1,1)=1 AND (PC.DISC_FROM IS NULL OR PC.DISC_FROM >= current_timestamp at time zone 'EST'))) \
AND (SESSION_PRICE.PRICE_TYPE=0 OR SELF_PACED_PRICE.PRICE_TYPE=0 OR CATALOG_PRICE.PRICE_TYPE=0)

sql.sessions.query=select DISTINCT T.OFFERING_TEMPLATE_NO CD_CRS, \
T.ID COURSE_ID, \
SUBSTR(T.OFFERING_TEMPLATE_NO, 1, LENGTH(OFFERING_TEMPLATE_NO)-3) CD_CRS_COURSE, \
T.TITLE NM_CRS, \
COALESCE(S.ID,SP.ID,PC.ID) OFFERING_SESSION_ID,\
COALESCE(S.CLASS_NO,SP.PART_NO,PC.PART_NO) CLASS_NO, \
COALESCE(S.CUSTOM10,SP.CUSTOM2,PC.CUSTOM2) CD_SEG, \
COALESCE(S.START_DATE,SP.AVAIL_FROM,PC.AVAIL_FROM) START_DATE, \
COALESCE(S.END_DATE,SP.DISC_FROM,PC.DISC_FROM) END_DATE, \
COALESCE(S.CUSTOM4,SPD.DETAIL1,PCD.DETAIL1) NOTES, \
NVL(S.MAX_CT,0) MAX_STUD_COUNT, \
NVL(S.STUD_CT,0) REGISTERED_STUD_COUNT, \
NVL(S.MIN_CT,0) MIN_STUD_COUNT, \
S.CUSTOM9 STATUS, \
E.START_TIME START_TIME, \
E.END_TIME END_TIME,\
F.NAME FACILITY_NAME, \
F.FACILITY_NO FACILITY_NO, \
F.CONTACT_PHONE CONTACT_PHONE, \
COALESCE(SESSION_PRICE.AMOUNT, SELF_PACED_PRICE.AMOUNT, CATALOG_PRICE.AMOUNT) TUITION, \
S.SESSION_TEMPLATE SESSION_TEMPLATE, \
FA.ADDR1 ADDR1, \
FA.ADDR2 ADDR2, \
FA.CITY CITY, \
FA.STATE STATE, \
FA.ZIP ZIP, \
PE.PERSON_NO PERSON_NO, \
PE.FNAME FNAME, \
PE.LNAME LNAME, \
LEC.CURRICULUMTITLE CURRICUM_TITLE, \
LEC.TABDISPLAYORDER CURRICUMTABDISPLAYORDER \
from LET_EXT_OFFERING_TEMPLATE T, \
LET_EXT_OFFERING_SESSION S, \
TPT_FACILITY F, \
TPT_PL_LIST_ENTRY SESSION_PRICE, \
TPT_PL_LIST_ENTRY SELF_PACED_PRICE, \
TPT_PL_LIST_ENTRY CATALOG_PRICE, \
FGT_TIME_ELEMENT E, \
LET_EXT_OFFERING_SELFPACED SP, \
TPT_EXT_PRODUCT_CATALOG PC, \
FGT_DETAIL SPD, \
FGT_DETAIL PCD, \
FGT_ADDRESS FA, \
CMT_PERSON PE, \
LET_EXT_CURRICULUM LEC \
where \
S.ID               = E.OWNER_ID (+) \
AND FA.OWNER_ID (+) = F.ID  \
AND T.ID           = S.OFFERING_TEMP_ID(+) \
AND S.ID           = SESSION_PRICE.PART_ID(+) \
AND SP.ID           = SELF_PACED_PRICE.PART_ID(+) \
AND PC.ID           = CATALOG_PRICE.PART_ID(+) \
AND T.ID           = SP.OFFERING_TEMP_ID(+) \
AND T.ID           = PC.OFFERING_TEMP_ID(+) \
AND S.CSR_ID       = PE.ID(+) \
AND S.FACILITY_ID  = F.ID(+) \
AND SP.DESCRIPTION = SPD.ID(+) \
AND PC.DESCRIPTION = PCD.ID(+) \
AND T.custom0=LEC.CURRICULUMCOURSECODE(+) \
AND ((S.CUSTOM9 in (:courseSessionStatus) AND SUBSTR(S.FLAGS, 7, 1) = 1 AND  S.END_DATE >= current_timestamp at time zone 'EST') \
 OR (SUBSTR(SP.FLAGS,1,1)=1 AND (SP.DISC_FROM IS NULL OR SP.DISC_FROM >= current_timestamp at time zone 'EST')) \
 OR (SUBSTR(PC.FLAGS,1,1)=1 AND (PC.DISC_FROM IS NULL OR PC.DISC_FROM >= current_timestamp at time zone 'EST'))) \
AND (SESSION_PRICE.PRICE_TYPE=0 OR SELF_PACED_PRICE.PRICE_TYPE=0 OR CATALOG_PRICE.PRICE_TYPE=0)

sql.course.session.id.query = AND (S.CLASS_NO = :courseSessionId OR PC.PART_NO = :courseSessionId OR SP.PART_NO = :courseSessionId)

sql.sessions.sessiondomain.query = AND S.status=100 AND  S.stud_book < S.max_ct AND S.SPLIT IN(:courseSessionDomain)



sql.location.city.state.query=select DISTINCT FA.CITY, FA.STATE \
from TPT_FACILITY F, FGT_ADDRESS FA, LET_EXT_OFFERING_SESSION S, LET_EXT_OFFERING_TEMPLATE T \
where F.ID=FA.OWNER_ID \
and S.FACILITY_ID=F.ID \
and T.ID=S.OFFERING_TEMP_ID \
and city is not null and state is not null \
and S.CUSTOM9 in ('C','S') \
and S.END_DATE >= current_timestamp at time zone 'EST' \
order by STATE, CITY

sql.course.all.query=select distinct OFFERING_TEMPLATE_NO CD_CRS, SUBSTR(OFFERING_TEMPLATE_NO, 1,\
LENGTH(OFFERING_TEMPLATE_NO)-3) CD_CRS_COURSE,TITLE NM_CRS, CASE  \
WHEN D.NAME = 'Classroom' AND (SUBSTR(T.OFFERING_TEMPLATE_NO, 1, \
LENGTH(T.OFFERING_TEMPLATE_NO)-3) like  '%D' OR SUBSTR(T.OFFERING_TEMPLATE_NO, 1, \
LENGTH(T.OFFERING_TEMPLATE_NO)-3) like  '%G'OR SUBSTR(T.OFFERING_TEMPLATE_NO, 1, \
LENGTH(T.OFFERING_TEMPLATE_NO)-3) like  '%T'OR SUBSTR(T.OFFERING_TEMPLATE_NO, 1, \
LENGTH(T.OFFERING_TEMPLATE_NO)-3) like  '%L') THEN 'Classroom - Daytime' \
WHEN D.NAME = 'Classroom' AND SUBSTR(T.OFFERING_TEMPLATE_NO, 1, \
LENGTH(T.OFFERING_TEMPLATE_NO)-3) like '%E' THEN 'Classroom - Evening' \
WHEN D.NAME IN ('Instructor-Supported WBT','Web Based Training','Virtual Class', \
'Video On Demand','Physical Offering','Paper','Book Offering') THEN 'Online Learning' \
END as TYPE from LET_EXT_OFFERING_TEMPLATE T, TPT_EXT_DELIVERY_MODE DM , \
TPT_OFFER_TEMP_DEL OTD,LET_EXT_DELIVERY D \
WHERE T.ID(+) = DM.OFFERING_TEMP_ID AND T.ID = OTD.OFFERING_TEMP_ID(+) \
AND T.ID = OTD.OFFERING_TEMP_ID(+) \
AND OTD.DELIVERY_ID = D.ID AND  substr(T.flags,4,1)='1' order by TITLE

# ========== Below are user and registration queries =========== #

sql.user.single.query=SELECT CMT_PERSON.ID as USER_ID, \
CMT_PERSON.TIME_STAMP, \
CMT_PERSON.USERNAME, \
CMT_PERSON.SS_NO, \
CMT_PERSON.TIMEZONE_ID, \
CMT_PERSON.CUSTOM9 as VETERAN, \
TPT_ACCOUNT.ID as ACCOUNT_ID, \
FNAME, \
LNAME, \
EMAIL, \
HOMEPHONE, \
WORKPHONE, \
DATE_OF_BIRTH, \
CMT_PERSON.SPLIT, \
CURRENCY_ID, \
ADDR3 as ADDRESS1, \
ADDR1 as ADDRESS2, \
CITY, \
STATE, \
ZIP \
FROM CMT_PERSON \
LEFT OUTER JOIN TPT_ACC_PARTY_ACCOUNT on CMT_PERSON.id = TPT_ACC_PARTY_ACCOUNT.party_id \
LEFT OUTER JOIN TPT_ACCOUNT ON TPT_ACCOUNT.id = TPT_ACC_PARTY_ACCOUNT.account_id \
LEFT OUTER JOIN TPT_ACCOUNT_CURRENCY on TPT_ACCOUNT.id = TPT_ACCOUNT_CURRENCY.ACCOUNT_ID \
LEFT OUTER JOIN FGT_ADDRESS on CMT_PERSON.id = FGT_ADDRESS.owner_id \
WHERE CMT_PERSON.ID = ?

sql.user.login.query=SELECT CMT_PERSON.ID as USER_ID, \
CMT_PERSON.TIME_STAMP, \
CMT_PERSON.USERNAME, \
CMT_PERSON.SS_NO, \
CMT_PERSON.TIMEZONE_ID, \
CMT_PERSON.CUSTOM9 as VETERAN, \
TPT_ACCOUNT.ID as ACCOUNT_ID, \
FNAME, \
LNAME, \
EMAIL, \
HOMEPHONE, \
WORKPHONE, \
DATE_OF_BIRTH, \
CMT_PERSON.SPLIT, \
CURRENCY_ID, \
ADDR3 as ADDRESS1, \
ADDR1 as ADDRESS2, \
CITY, \
STATE, \
ZIP \
FROM CMT_PERSON \
LEFT OUTER JOIN TPT_ACC_PARTY_ACCOUNT on CMT_PERSON.id = TPT_ACC_PARTY_ACCOUNT.party_id \
LEFT OUTER JOIN TPT_ACCOUNT ON TPT_ACCOUNT.id = TPT_ACC_PARTY_ACCOUNT.account_id \
LEFT OUTER JOIN TPT_ACCOUNT_CURRENCY on TPT_ACCOUNT.id = TPT_ACCOUNT_CURRENCY.ACCOUNT_ID \
LEFT OUTER JOIN FGT_ADDRESS on CMT_PERSON.id = FGT_ADDRESS.owner_id \
WHERE CMT_PERSON.USERNAME = UPPER(?) and CMT_PERSON.PASSWORD = ?

sql.user.timezones.query=SELECT ID, NAME FROM FGT_SYS_TIMEZONE

sql.user.personInsert.procedure = tpp_person_ins
sql.user.profileInsert.procedure = cmp_profile_entry_ins
sql.user.listEntryInsert.procedure =  fgp_listel_ins
sql.user.deleteUser.procedure = tpp_person_del

sql.user.personId.sequence = select lpad(ltrim(rtrim(to_char(tpt_person_seq.nextval))), 15, '0') id from dual
sql.user.profileId.sequence = select lpad(ltrim(rtrim(to_char(cmt_profile_entry_seq.nextval))), 15, '0') id from dual
sql.user.listEntry.sequence = select lpad(ltrim(rtrim(to_char(fgt_list_entry_seq.nextval))), 15, '0') id from dual

sql.registration.offeringActionInsert.procedure = tpp_offer_action_profile_ins
sql.registration.insertRegistration.procedure = tpp_registration_ins
sql.registration.insertOrder.procedure = tpp_oe_order_ins
sql.registration.insertOrderItem.procedure = tpp_oe_item_reg_ins
sql.registration.insertCharge.procedure = tpp_charge_ins
sql.registration.insertPayment.procedure = lep_payment_info_ins
sql.registration.orderComplete.procedure = tpp_oe_tran_complete

sql.registration.offeringActionId.sequence = select lpad(ltrim(rtrim(to_char(tpt_offer_action_profile_seq.nextval))), 15, '0') id from dual
sql.registration.registrationId.sequence = select lpad(ltrim(rtrim(to_char(tpt_regist_seq.nextval))), 15, '0') id from dual
sql.registration.orderId.sequence = select lpad(ltrim(rtrim(to_char(tpt_oe_order_seq.nextval))), 15, '0') id from dual
sql.registration.orderItemId.sequence = select lpad(ltrim(rtrim(to_char(tpt_oe_item_reg_seq.nextval))), 15, '0') id from dual
sql.registration.chargeId.sequence = select lpad(ltrim(rtrim(to_char(tpt_charge_seq.nextval))), 15, '0') id from dual
sql.registration.paymentId.sequence = select lpad(ltrim(rtrim(to_char(let_payment_info_seq.nextval))), 15, '0') id from dual

sql.registration.getOrderNo.query = SELECT ORDER_NO FROM TPT_OE_ORDER WHERE ID = ?

sql.registration.getExisting.query = select DISTINCT \
 REG.ID as reg_id, \
 ORD.ORDER_NO as order_no, \
 REG.STUDENT_ID as student_id, \
 COALESCE(OS.CLASS_NO,OSP.PART_NO,PC.PART_NO) session_id \
from TPT_REGISTRATION REG, \
 TPT_OE_ORDER_ITEMS OI, \
 TPT_OE_ORDER ORD, \
 LET_EXT_OFFERING_SESSION OS, \
 LET_EXT_OFFERING_SELFPACED OSP, \
 TPT_EXT_PRODUCT_CATALOG PC \
where REG.ID=OI.REG_ID \
 and OI.ORDER_ID=ORD.ID \
 and REG.CLASS_ID = COALESCE(OS.ID,OSP.ID,PC.ID) \
 and REG.STATUS = 100 \
 and REG.STUDENT_ID = ? \
 and (OS.CLASS_NO = ? OR PC.PART_NO = ? OR OSP.PART_NO = ?)

course.interval.default=Variable

auth.token.expire.minutes=30
auth.token.password=HTRdkjfDFADFKjjkjfskajdFjdsaFJdsfj%sxf
auth.token.filter.uri.no.token.required=/api/token,/api/env,/api/ping
auth.token.filter.uri.guest.token.required=/api/site,/api/locations,/api/courses,/api/courses/\\w+$,/api/courses/\\w+/sessions,/api/courses/session/\\w+$,/api/courses/categories,/api/user,/api/authentication,/api/user/timezones,/api/courses/sessions
auth.token.header=Authorization
auth.user.attribute=X-Auth-User

# CyberSource client properties
cybersource.merchantID=evalgraduateschool
cybersource.keyFilename=evalgraduateschool.p12
cybersource.targetAPIVersion=1.123
cybersource.serverURL=https://ics2wstest.ic3.com/commerce/1.x/transactionProcessor
cybersource.useHttpClient=true
cybersource.timeout=5000
cybersource.sendToProduction=false
cybersource.enableLog=false
cybersource.logMaximumSize=10
cybersource.declinedReasonCodes=200,202,203,204,205,208,209,210,211,230,231,232,233